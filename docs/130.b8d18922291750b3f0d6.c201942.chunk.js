(window.webpackJsonp = window.webpackJsonp || []).push([[130], {
  '7515783c2addb9e464d6': function (e, t, n) {
    n.r(t); let i; const c = n('8af190b70a6bc55c6f1b'); const a = n.n(c); const r = (n('8a2d1b95e05b6a321e74'), n('d7dd51e1bf6bfc2c9c3d')); const o = n('0d7f0986bcd2f33d8a2a'); const d = n.n(o); const s = n('ab039aecd4a1d4fedc0e'); const u = n('57b36dff0c422d2b9c67'); const f = n('0d5a1aa701766449187d'); const b = n('cdfaa1887f639931317a'); const l = n('a72b40110d9c31c9b5c5'); const p = n('fcb99a06256635f70435'); const O = n('2157bd598f2b425595ea'); const E = n('17a826745d7905c7f263'); const S = n('4bbbd76528501909b843'); const j = n('0765c307dd1d0b7a1748'); const m = n('6542cd13fd5dd1bcffd4'); const g = n('52147c536625ee918894'); const h = Object(s.defineMessages)({
      pageTitle: { id: 'app.containers.UserView.pageTitle', defaultMessage: 'User profile' }, metaDescription: { id: 'app.containers.UserView.metaDescription', defaultMessage: 'User profile page description' }, notFound: { id: 'app.containers.UserView.notFound', defaultMessage: 'Sorry no user found' }, editPassword: { id: 'app.containers.UserView.editPassword', defaultMessage: 'Change password' },
    }); const I = n('a28fc3c963a1d4d1a2e5'); const R = n('968c3c585cf17da94a14'); const v = Object(I.a)((e, t) => Object(m.ib)(e, { path: O.n.USERS, id: t }), (e) => Object(m.eb)(e, O.n.USERS), (e) => Object(m.eb)(e, O.n.USER_ROLES), (e) => Object(m.eb)(e, O.n.ROLES), (e, t, n, i) => e && t && n && i && Object(f.l)(e, t).set('roles', n.filter((t) => Object(R.b)(t.getIn(['attributes', 'user_id']), e.get('id'))).map((e) => i.find((t) => Object(R.b)(t.get('id'), e.getIn(['attributes', 'role_id'])))))); const w = Object(I.a)((e, t) => t, (e) => Object(m.oc)(e), m.Y, (e) => Object(m.eb)(e, O.n.USER_CATEGORIES), (e, t, n, i) => t && Object(f.F)(t, n, i, 'tags_users', 'user_id', e)); const U = [O.n.USERS, O.n.ROLES, O.n.USER_ROLES, O.n.CATEGORIES, O.n.TAXONOMIES, O.n.USER_CATEGORIES, O.n.PAGES]; function y(e, t, n, c) {
      i || (i = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 60103); const a = e && e.defaultProps; const r = arguments.length - 3; if (t || r === 0 || (t = { children: void 0 }), r === 1)t.children = c; else if (r > 1) { for (var o = new Array(r), d = 0; d < r; d++)o[d] = arguments[d + 3]; t.children = o; } if (t && a) for (const s in a) void 0 === t[s] && (t[s] = a[s]); else t || (t = a || {}); return {
        $$typeof: i, type: e, key: void 0 === n ? null : `${n}`, ref: null, props: t, _owner: null,
      };
    } const M = function (e, t) { return [{ fields: [Object(u.u)(e, t, 'name', g.a.attributes.name)] }]; }; const P = function (e) { return [{ fields: [Object(u.q)(e), Object(u.m)(e)] }]; }; const A = function (e) { return [{ fields: [Object(u.f)(e)] }]; }; const C = function (e) { return [{ fields: Object(u.s)(e) }]; }; const L = y(E.a, {}); t.default = Object(r.connect)((e, t) => ({
      sessionUserHighestRoleId: Object(m.dc)(e), dataReady: Object(m.Pb)(e, { path: U }), sessionUserId: Object(m.ec)(e), user: v(e, t.params.id), taxonomies: w(e, t.params.id),
    }), (e) => ({
      onLoadEntitiesIfNeeded() { U.forEach((t) => e(Object(l.s)(t))); }, handleEdit(t) { e(Object(l.cb)(''.concat(O.I.USERS).concat(O.I.EDIT, '/').concat(t), { replace: !0 })); }, handleEditPassword(t) { e(Object(l.cb)(''.concat(O.I.USERS).concat(O.I.PASSWORD, '/').concat(t), { replace: !0 })); }, handleClose() { e(Object(l.f)(O.I.USERS)); }, onSetPrintView(t) { e(Object(l.z)(t)); },
    }))(Object(s.injectIntl)((e) => {
      const t = e.user; const n = e.dataReady; const i = e.sessionUserHighestRoleId; const r = e.taxonomies; const o = e.intl; const l = e.params; const E = e.sessionUserId; const m = e.handleEditPassword; const g = e.handleEdit; const I = e.handleClose; const R = e.onLoadEntitiesIfNeeded; const v = e.onSetPrintView; Object(c.useEffect)(() => { R(); }, []); const w = function () { return v({ printType: p.I.SINGLE, printOrientation: 'portrait', printSize: 'A4' }); }; const U = function (e) { Object(b.a)(e, w); }; Object(c.useEffect)(() => document.addEventListener('keydown', U), () => { document.removeEventListener('keydown', U); }, []); const T = i <= O.M.MANAGER.value; const _ = o.formatMessage(h.pageTitle); const k = t ? ''.concat(_, ': ').concat(Object(f.y)(t)) : ''.concat(_, ' ').concat(l.id); const D = []; if (t) {
        const G = t.get('id') || t.getIn(['attributes', 'id']); n && D.push({
          type: 'icon', onClick: w, title: 'Print', icon: 'print',
        }), G === E && D.push({ type: 'edit', title: o.formatMessage(h.editPassword), onClick() { return m(G); } }), (i === O.M.ADMIN.value || G === E || i < Object(u.h)(t.get('roles'))) && D.push({ type: 'edit', onClick() { return g(G); } });
      } return y('div', {}, void 0, y(d.a, { title: k, meta: [{ name: 'description', content: o.formatMessage(h.metaDescription) }] }), y(S.a, { isSingle: !0 }, void 0, !t && !n && L, !t && n && y('div', {}, void 0, a.a.createElement(s.FormattedMessage, h.notFound)), t && n && y(j.a, { header: { title: _, onClose: I, buttons: D }, fields: { header: { main: M(t, T), aside: T && P(t) }, body: { main: A(t), aside: T && C(r) } } })));
    }));
  },
}]);
