(window.webpackJsonp = window.webpackJsonp || []).push([[105], {
  '52d9a4fc64f648cc49f6': function (e, t, n) {
    n.r(t); let r; const i = n('8af190b70a6bc55c6f1b'); const a = n.n(i); const o = n('8a2d1b95e05b6a321e74'); const c = n.n(o); const s = n('d7dd51e1bf6bfc2c9c3d'); const u = n('0d7f0986bcd2f33d8a2a'); const d = n.n(u); const f = n('ab039aecd4a1d4fedc0e'); const l = n('1dfca9f44be16af281fa'); const p = n('54f683fcda7806277002'); const b = n('47e94b5ec55a17ebe237'); const m = n('57b36dff0c422d2b9c67'); const y = n('86b83146d2366c27fd7c'); const h = n('a0eea3e3c7c0b7b70771'); const g = n('0d5a1aa701766449187d'); const O = n('fcb99a06256635f70435'); const j = n('2157bd598f2b425595ea'); const v = n('52147c536625ee918894'); const E = n('a72b40110d9c31c9b5c5'); const S = n('6542cd13fd5dd1bcffd4'); const R = n('fb88414ab887e57c7b57'); const M = n('17a826745d7905c7f263'); const _ = n('4bbbd76528501909b843'); const w = n('e4dd33cd8c3dbbd378c3'); const F = n('2da65066c2da9f64c68a'); const C = n('a28fc3c963a1d4d1a2e5'); const A = n('968c3c585cf17da94a14'); const D = n('12588ecba7a099a947f0'); const I = Object(C.a)((e) => e.get('resourceEdit'), (e) => e); const x = Object(C.a)((e, t) => Object(S.ib)(e, { path: j.n.RESOURCES, id: t }), (e) => Object(S.eb)(e, j.n.USERS), (e, t) => Object(g.l)(e, t)); const P = Object(C.a)(S.oc, S.Y, (e, t) => Object(g.D)(e, t, !1)); const B = Object(C.a)((e) => Object(S.Pb)(e, { path: D.a }), x, S.p, S.m, S.v, (e, t, n, r, i) => { if (!t || !e) return null; const a = t.getIn(['attributes', 'resourcetype_id']).toString(); const o = Object.keys(j.f).filter((e) => { const t = j.f[e]; return t && t.indexOf(a) > -1; }); return o && o.length !== 0 ? i.filter((e) => o && o.indexOf(e.get('id')) > -1).map((e) => { const i = n.filter((t) => Object(A.b)(e.get('id'), t.getIn(['attributes', 'measuretype_id']))); return Object(g.g)(i, r, t.get('id')); }) : null; }); const U = Object(f.defineMessages)({
      pageTitle: { id: 'app.containers.ResourceEdit.pageTitle', defaultMessage: 'Edit {type}' }, metaDescription: { id: 'app.containers.ResourceEdit.metaDescription', defaultMessage: 'Edit Resource page description' }, header: { id: 'app.containers.ResourceEdit.header', defaultMessage: 'Edit {type}' }, notFound: { id: 'app.containers.ResourceEdit.notFound', defaultMessage: 'Sorry no objective found' },
    }); function k(e) { return (k = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e; } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e; })(e); } function T(e, t, n, i) {
      r || (r = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 60103); const a = e && e.defaultProps; const o = arguments.length - 3; if (t || o === 0 || (t = { children: void 0 }), o === 1)t.children = i; else if (o > 1) { for (var c = new Array(o), s = 0; s < o; s++)c[s] = arguments[s + 3]; t.children = c; } if (t && a) for (const u in a) void 0 === t[u] && (t[u] = a[u]); else t || (t = a || {}); return {
        $$typeof: r, type: e, key: void 0 === n ? null : `${n}`, ref: null, props: t, _owner: null,
      };
    } function N(e, t) { for (let n = 0; n < t.length; n++) { const r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, 'value' in r && (r.writable = !0), Object.defineProperty(e, r.key, r); } } function J(e, t) { return (J = Object.setPrototypeOf || function (e, t) { return e.__proto__ = t, e; })(e, t); } function H(e) { const t = (function () { if (typeof Reflect === 'undefined' || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if (typeof Proxy === 'function') return !0; try { return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], () => {})), !0; } catch (e) { return !1; } }()); return function () { let n; const r = W(e); if (t) { const i = W(this).constructor; n = Reflect.construct(r, arguments, i); } else n = r.apply(this, arguments); return (function (e, t) { if (t && (k(t) === 'object' || typeof t === 'function')) return t; if (void 0 !== t) throw new TypeError('Derived constructors may only return object or undefined'); return K(e); }(this, n)); }; } function K(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; } function W(e) { return (W = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) { return e.__proto__ || Object.getPrototypeOf(e); })(e); } function Y(e, t, n) {
      return t in e ? Object.defineProperty(e, t, {
        value: n, enumerable: !0, configurable: !0, writable: !0,
      }) : e[t] = n, e;
    }n.d(t, 'ResourceEdit', () => z); const $ = T(M.a, {}); const q = T(M.a, {}); var z = (function (e) {
      !(function (e, t) { if (typeof t !== 'function' && t !== null) throw new TypeError('Super expression must either be null or a function'); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), t && J(e, t); }(o, a.a.PureComponent)); let t; let n; let r; const i = H(o); function o(e) {
        let t; return (function (e, t) { if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function'); }(this, o)), Y(K(t = i.call(this, e)), 'getInitialFormData', (e) => { const n = e || t.props; const r = n.viewEntity; const i = n.actionsByActiontype; return r ? Object(p.Map)({ id: r.get('id'), attributes: r.get('attributes').mergeWith((e, t) => e === null ? t : e, D.b.get('attributes')), associatedActionsByActiontype: i ? i.map((e) => Object(b.a)(e, !0)) : Object(p.Map)() }) : Object(p.Map)(); }), Y(K(t), 'getHeaderMainFields', (e) => { const n = t.context.intl; const r = e.getIn(['attributes', 'resourcetype_id']); return [{ fields: [Object(m.i)('resourcetype_id', n.formatMessage(v.a.resourcetypes[r]), !0), Object(g.e)(r, 'title') && Object(b.z)(n.formatMessage, 'title', 'title', Object(g.f)(r, 'title'))] }]; }), Y(K(t), 'getHeaderAsideFields', (e) => { const n = t.context.intl; return [{ fields: [Object(b.x)(n.formatMessage), Object(m.m)(e)] }]; }), Y(K(t), 'getBodyMainFields', (e, n, r, i) => {
          const a = t.context.intl; const o = e.getIn(['attributes', 'resourcetype_id']); const c = []; if (c.push({ fields: [Object(g.e)(o, 'url') && Object(b.l)(a.formatMessage, Object(g.f)(o, 'url'), 'url')] }), c.push({ fields: [Object(g.e)(o, 'description') && Object(b.m)(a.formatMessage, Object(g.f)(o, 'description'), 'description'), Object(g.e)(o, 'status') && Object(b.m)(a.formatMessage, Object(g.f)(o, 'status'), 'status')] }), r) {
            const s = Object(b.E)({
              entitiesByActiontype: r, taxonomies: n, onCreateOption: i, contextIntl: a,
            }); s && c.push({ label: a.formatMessage(v.a.nav.actions), fields: s });
          } return c;
        }), Y(K(t), 'getBodyAsideFields', (e) => { const n = t.context.intl; const r = e.getIn(['attributes', 'resourcetype_id']); return [{ fields: [Object(g.e)(r, 'publication_date') && Object(b.g)(n.formatMessage, 'publication_date', Object(g.f)(r, 'publication_date')), Object(g.e)(r, 'access_date') && Object(b.g)(n.formatMessage, 'access_date', Object(g.f)(r, 'access_date'))] }]; }), t.scrollContainer = a.a.createRef(), t;
      } return t = o, (n = [{ key: 'UNSAFE_componentWillMount', value() { this.props.loadEntitiesIfNeeded(), this.props.dataReady && this.props.viewEntity && this.props.initialiseForm('resourceEdit.form.data', this.getInitialFormData()); } }, { key: 'UNSAFE_componentWillReceiveProps', value(e) { e.dataReady || this.props.loadEntitiesIfNeeded(), e.dataReady && !this.props.dataReady && e.viewEntity && this.props.initialiseForm('resourceEdit.form.data', this.getInitialFormData(e)), e.authReady && !this.props.authReady && this.props.redirectIfNotPermitted(), Object(h.a)(e, this.props) && this.scrollContainer && Object(y.d)(this.scrollContainer.current); } }, {
        key: 'render',
        value() {
          const e = this; const t = this.context.intl; const n = this.props; const r = n.viewEntity; const i = n.dataReady; const o = n.viewDomain; const c = n.connectedTaxonomies; const s = n.actionsByActiontype; const u = n.onCreateOption; const l = r && r.getIn(['attributes', 'resourcetype_id']); const p = o.get('page').toJS(); const b = p.saveSending; const m = p.saveError; const y = p.deleteSending; const h = p.deleteError; const g = p.submitValid; const j = t.formatMessage(v.a.entities[l ? 'resources_'.concat(l) : 'resources'].single); return T('div', {}, void 0, T(d.a, { title: ''.concat(t.formatMessage(U.pageTitle, { type: j })), meta: [{ name: 'description', content: t.formatMessage(U.metaDescription) }] }), a.a.createElement(_.a, { ref: this.scrollContainer }, T(w.a, { title: t.formatMessage(U.pageTitle, { type: j }), type: O.l, buttons: r && i ? [{ type: 'cancel', onClick: this.props.handleCancel }, { type: 'save', disabled: b, onClick() { return e.props.handleSubmitRemote('resourceEdit.form.data'); } }] : null }), !g && T(R.a, { type: 'error', messageKey: 'submitInvalid', onDismiss: this.props.onErrorDismiss }), m && T(R.a, { type: 'error', messages: m.messages, onDismiss: this.props.onServerErrorDismiss }), h && T(R.a, { type: 'error', messages: h.messages }), (b || y || !i) && $, !r && i && !m && !y && T('div', {}, void 0, a.a.createElement(f.FormattedMessage, U.notFound)), r && i && !y && T(F.a, {
            model: 'resourceEdit.form.data', formData: o.getIn(['form', 'data']), saving: b, handleSubmit(t) { return e.props.handleSubmit(t, s); }, handleSubmitFail: this.props.handleSubmitFail, handleCancel: this.props.handleCancel, handleUpdate: this.props.handleUpdate, handleDelete: this.props.isUserAdmin ? this.props.handleDelete : null, fields: { header: { main: this.getHeaderMainFields(r), aside: this.getHeaderAsideFields(r) }, body: { main: this.getBodyMainFields(r, c, s, u), aside: this.getBodyAsideFields(r) } }, scrollContainer: this.scrollContainer.current,
          }), (b || y) && q));
        },
      }]) && N(t.prototype, n), r && N(t, r), o;
    }()); z.contextTypes = { intl: c.a.object.isRequired }; t.default = Object(s.connect)((e, t) => ({
      viewDomain: I(e), isUserAdmin: Object(S.vb)(e), dataReady: Object(S.Pb)(e, { path: D.a }), authReady: Object(S.Qb)(e), viewEntity: x(e, t.params.id), actionsByActiontype: B(e, t.params.id), connectedTaxonomies: P(e),
    }), (e, t) => ({
      loadEntitiesIfNeeded() { D.a.forEach((t) => e(Object(E.s)(t))); },
      redirectIfNotPermitted() { e(Object(E.A)(j.M.MANAGER.value)); },
      initialiseForm(t, n) { e(l.actions.reset(t)), e(l.actions.change(t, n, { silent: !0 })); },
      onErrorDismiss() { e(Object(E.Y)(!0)); },
      onServerErrorDismiss() { e(Object(E.F)()); },
      handleSubmitFail() { e(Object(E.Y)(!1)); },
      handleSubmitRemote(t) { e(l.actions.submit(t)); },
      handleSubmit(t, n) {
        let r; let i = t; n && (i = i.set('actionResources', n.map((e, n) => Object(b.f)({
          formData: t, connections: e, connectionAttribute: ['associatedActionsByActiontype', n.toString()], createConnectionKey: 'measure_id', createKey: 'resource_id',
        })).reduce((e, t) => { const n = e.get('delete').concat(t.get('delete')); const r = e.get('create').concat(t.get('create')); return e.set('delete', n).set('create', r); }, Object(p.fromJS)({ delete: [], create: [] })))), e((r = i.toJS(), { type: D.c, data: r }));
      },
      handleCancel() { e(Object(E.cb)(''.concat(j.I.RESOURCE, '/').concat(t.params.id), { replace: !0 })); },
      handleUpdate(t) { e(Object(E.bb)(t)); },
      handleDelete() { e(Object(E.h)({ path: j.n.RESOURCES, id: t.params.id, redirect: j.I.RESOURCES })); },
      onCreateOption(t) { e(Object(E.y)(t)); },
    }))(z);
  },
}]);
