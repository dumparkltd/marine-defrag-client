(window.webpackJsonp = window.webpackJsonp || []).push([[117], {
  '6e7053421913e6adb827': function (e, t, n) {
    n.r(t); const r = n('8af190b70a6bc55c6f1b'); const i = n.n(r); const o = n('8a2d1b95e05b6a321e74'); const a = n.n(o); const c = n('d7dd51e1bf6bfc2c9c3d'); const s = n('0d7f0986bcd2f33d8a2a'); const u = n.n(s); const d = n('ab039aecd4a1d4fedc0e'); const f = n('1dfca9f44be16af281fa'); const l = n('54f683fcda7806277002'); const b = n('47e94b5ec55a17ebe237'); const p = n('57b36dff0c422d2b9c67'); const m = n('86b83146d2366c27fd7c'); const h = n('a0eea3e3c7c0b7b70771'); const y = n('a72b40110d9c31c9b5c5'); const g = n('6542cd13fd5dd1bcffd4'); const O = n('fcb99a06256635f70435'); const j = n('2157bd598f2b425595ea'); const v = n('fb88414ab887e57c7b57'); const E = n('17a826745d7905c7f263'); const S = n('4bbbd76528501909b843'); const R = n('e4dd33cd8c3dbbd378c3'); const w = n('2da65066c2da9f64c68a'); const M = n('a28fc3c963a1d4d1a2e5'); const F = n('0d5a1aa701766449187d'); const U = n('968c3c585cf17da94a14'); const I = Object(M.a)((e) => e.get('userEdit'), (e) => e); const _ = Object(M.a)((e, t) => Object(g.ib)(e, { path: j.n.USERS, id: t }), (e) => Object(g.eb)(e, j.n.USERS), (e) => Object(g.eb)(e, j.n.USER_ROLES), (e) => Object(g.eb)(e, j.n.ROLES), (e, t, n, r) => e && t && n && r && Object(F.l)(e, t).set('roles', n.filter((t) => Object(U.b)(t.getIn(['attributes', 'user_id']), e.get('id'))).map((e) => r.find((t) => Object(U.b)(t.get('id'), e.getIn(['attributes', 'role_id'])))))); const D = (Object(M.a)((e, t) => t, g.oc, g.Y, g.sc, (e, t, n, r) => Object(F.E)(t, n, r, 'tags_users', e)), Object(M.a)((e, t) => t, (e) => Object(g.eb)(e, j.n.ROLES), (e) => Object(g.eb)(e, j.n.USER_ROLES), (e, t, n) => t && t.map((t) => { const r = n.filter((t) => Object(U.b)(t.getIn(['attributes', 'user_id']), e)).find((e) => Object(U.b)(e.getIn(['attributes', 'role_id']), t.get('id'))); return t.set('associated', r || null); }))); const C = n('2101b09ff3db43092b5c'); let k; const P = Object(d.defineMessages)({
      pageTitle: { id: 'app.containers.UserEdit.pageTitle', defaultMessage: 'Update user profile' }, metaDescription: { id: 'app.containers.UserEdit.metaDescription', defaultMessage: 'Edit User page description' }, header: { id: 'app.containers.UserEdit.header', defaultMessage: 'Update user profile' }, notFound: { id: 'app.containers.UserEdit.notFound', defaultMessage: 'Sorry user not found' },
    }); function T(e) { return (T = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e; } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e; })(e); } function x(e, t, n, r) {
      k || (k = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 60103); const i = e && e.defaultProps; const o = arguments.length - 3; if (t || o === 0 || (t = { children: void 0 }), o === 1)t.children = r; else if (o > 1) { for (var a = new Array(o), c = 0; c < o; c++)a[c] = arguments[c + 3]; t.children = a; } if (t && i) for (const s in i) void 0 === t[s] && (t[s] = i[s]); else t || (t = i || {}); return {
        $$typeof: k, type: e, key: void 0 === n ? null : `${n}`, ref: null, props: t, _owner: null,
      };
    } function L(e, t) { for (let n = 0; n < t.length; n++) { const r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, 'value' in r && (r.writable = !0), Object.defineProperty(e, r.key, r); } } function A(e, t) { return (A = Object.setPrototypeOf || function (e, t) { return e.__proto__ = t, e; })(e, t); } function N(e) { const t = (function () { if (typeof Reflect === 'undefined' || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if (typeof Proxy === 'function') return !0; try { return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], () => {})), !0; } catch (e) { return !1; } }()); return function () { let n; const r = B(e); if (t) { const i = B(this).constructor; n = Reflect.construct(r, arguments, i); } else n = r.apply(this, arguments); return (function (e, t) { if (t && (T(t) === 'object' || typeof t === 'function')) return t; if (void 0 !== t) throw new TypeError('Derived constructors may only return object or undefined'); return H(e); }(this, n)); }; } function H(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; } function B(e) { return (B = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) { return e.__proto__ || Object.getPrototypeOf(e); })(e); } function J(e, t, n) {
      return t in e ? Object.defineProperty(e, t, {
        value: n, enumerable: !0, configurable: !0, writable: !0,
      }) : e[t] = n, e;
    }n.d(t, 'UserEdit', () => q); const W = x(E.a, {}); const Y = x(E.a, {}); var q = (function (e) {
      !(function (e, t) { if (typeof t !== 'function' && t !== null) throw new TypeError('Super expression must either be null or a function'); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), t && A(e, t); }(a, i.a.PureComponent)); let t; let n; let r; const o = N(a); function a(e) {
        let t; return (function (e, t) { if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function'); }(this, a)), J(H(t = o.call(this, e)), 'getInitialFormData', (e) => {
          const n = e || t.props; const r = n.taxonomies; const i = n.roles; const o = n.viewEntity; return Object(l.Map)({
            id: o.get('id'), attributes: o.get('attributes').mergeWith((e, t) => e === null ? t : e, C.b.get('attributes')), associatedTaxonomies: Object(b.N)(r), associatedRole: Object(b.k)(i),
          });
        }), J(H(t), 'getHeaderMainFields', () => { const e = t.context.intl; return [{ fields: [Object(b.z)(e.formatMessage, 'title', 'name')] }]; }), J(H(t), 'getHeaderAsideFields', (e, n) => { const r = t.context.intl; return [{ fields: n && n.size > 0 ? [Object(b.v)(r.formatMessage, n), Object(p.m)(e)] : [Object(p.q)(e), Object(p.m)(e)] }]; }), J(H(t), 'getBodyMainFields', () => { const e = t.context.intl; return [{ fields: [Object(b.h)(e.formatMessage)] }]; }), J(H(t), 'getEditableUserRoles', (e, t) => { if (e) { const n = Object(b.k)(e); return e.filter((e) => t === j.M.ADMIN.value || t < n && t < parseInt(e.get('id'), 10)); } return Object(l.Map)(); }), t.scrollContainer = i.a.createRef(), t;
      } return t = a, (n = [{ key: 'UNSAFE_componentWillMount', value() { this.props.loadEntitiesIfNeeded(), this.props.dataReady && this.props.viewEntity && this.props.initialiseForm('userEdit.form.data', this.getInitialFormData()); } }, { key: 'UNSAFE_componentWillReceiveProps', value(e) { e.dataReady || this.props.loadEntitiesIfNeeded(), e.dataReady && !this.props.dataReady && e.viewEntity && this.props.initialiseForm('userEdit.form.data', this.getInitialFormData(e)), Object(h.a)(e, this.props) && this.scrollContainer && Object(m.d)(this.scrollContainer.current); } }, {
        key: 'render',
        value() {
          const e = this; const t = this.context.intl; const n = this.props; const r = n.viewEntity; const o = n.dataReady; const a = n.viewDomain; const c = n.roles; const s = n.sessionUserHighestRoleId; const f = this.props.params.id; const l = a.get('page').toJS(); const b = l.saveSending; const p = l.saveError; const m = l.submitValid; const h = this.getEditableUserRoles(c, s); return x('div', {}, void 0, x(u.a, { title: ''.concat(t.formatMessage(P.pageTitle), ': ').concat(f), meta: [{ name: 'description', content: t.formatMessage(P.metaDescription) }] }), i.a.createElement(S.a, { ref: this.scrollContainer }, x(R.a, {
            title: t.formatMessage(P.pageTitle), type: O.l, icon: 'users', buttons: r && [{ type: 'cancel', onClick() { return e.props.handleCancel(e.props.params.id); } }, { type: 'save', disabled: b, onClick() { return e.props.handleSubmitRemote('userEdit.form.data'); } }],
          }), !m && x(v.a, { type: 'error', messageKey: 'submitInvalid', onDismiss: this.props.onErrorDismiss }), p && x(v.a, { type: 'error', messages: p.messages, onDismiss: this.props.onServerErrorDismiss }), b && W, !r && o && !p && x('div', {}, void 0, i.a.createElement(d.FormattedMessage, P.notFound)), r && x(w.a, {
            model: 'userEdit.form.data', formData: a.getIn(['form', 'data']), saving: b, handleSubmit(t) { return e.props.handleSubmit(t, c); }, handleSubmitFail: this.props.handleSubmitFail, handleCancel() { return e.props.handleCancel(f); }, handleUpdate: this.props.handleUpdate, fields: { header: { main: this.getHeaderMainFields(), aside: this.getHeaderAsideFields(r, h) }, body: { main: this.getBodyMainFields() } }, scrollContainer: this.scrollContainer.current,
          }), b && Y));
        },
      }]) && L(t.prototype, n), r && L(t, r), a;
    }()); q.contextTypes = { intl: a.a.object.isRequired }; t.default = Object(c.connect)((e, t) => ({
      sessionUserHighestRoleId: Object(g.dc)(e), viewDomain: I(e), dataReady: Object(g.Pb)(e, { path: C.a }), viewEntity: _(e, t.params.id), roles: D(e, t.params.id),
    }), (e) => ({
      loadEntitiesIfNeeded() { C.a.forEach((t) => e(Object(y.s)(t))); }, initialiseForm(t, n) { e(f.actions.reset(t)), e(f.actions.change(t, n, { silent: !0 })); }, onErrorDismiss() { e(Object(y.Y)(!0)); }, onServerErrorDismiss() { e(Object(y.F)()); }, handleSubmitFail() { e(Object(y.Y)(!1)); }, handleSubmitRemote(t) { e(f.actions.submit(t)); }, handleSubmit(t, n) { let r; let i; let o = t; const a = parseInt(t.get('associatedRole'), 10); const c = a === j.M.DEFAULT.value ? Object(l.List)() : n.reduce((e, t) => a <= parseInt(t.get('id'), 10) ? e.push(t.get('id')) : e, Object(l.List)()); o = o.set('userRoles', Object(l.Map)({ delete: n.reduce((e, t) => !t.get('associated') || c.includes(t.get('id')) || c.includes(parseInt(t.get('id'), 10)) ? e : e.push(t.getIn(['associated', 'id'])), Object(l.List)()), create: c.reduce((e, r) => n.find((e) => e.get('id') === r && !e.get('associated')) ? e.push(Object(l.Map)({ role_id: r, user_id: t.get('id') })) : e, Object(l.List)()) })), e((r = o.toJS(), { type: C.c, data: r, id: i })); }, handleCancel(t) { e(Object(y.cb)(''.concat(j.I.USERS, '/').concat(t), { replace: !0 })); }, handleUpdate(t) { e(Object(y.bb)(t)); }, onCreateOption(t) { e(Object(y.y)(t)); },
    }))(q);
  },
}]);
